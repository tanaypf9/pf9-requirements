{
  "comments": [
    {
      "key": {
        "uuid": "3fa7e38b_6f14454e",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 12898
      },
      "writtenOn": "2019-11-12T01:25:53Z",
      "side": 1,
      "message": "This isn\u0027t mandated right?   A project *may* choose to drop py2 support during U",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 9,
        "endChar": 38
      },
      "revId": "ffc55d352a009b178f4ba4bf9c8e36060307d587",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3fa7e38b_b23700b0",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 11904
      },
      "writtenOn": "2019-11-12T02:20:10Z",
      "side": 1,
      "message": "Technically yes, they don\u0027t have to. But any using common libraries like oslo will likely be forced to. I can update the statement to \"Ussuri and later may be Python 3 only\" if you think the commit message will cause confusion.",
      "parentUuid": "3fa7e38b_6f14454e",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 9,
        "endChar": 38
      },
      "revId": "ffc55d352a009b178f4ba4bf9c8e36060307d587",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3fa7e38b_d2eddcf0",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 12898
      },
      "writtenOn": "2019-11-12T02:50:02Z",
      "side": 1,
      "message": "Hmmm OK I\u0027m not sure I like the idea of oslo forcing projects to be py3 only, but neither do I like the idea of projects forcing olso to carry py2 code :(\n\nIf we need to respin this review then yes please to updating the commit message but only if we\u0027re re-spinning.",
      "parentUuid": "3fa7e38b_b23700b0",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 9,
        "endChar": 38
      },
      "revId": "ffc55d352a009b178f4ba4bf9c8e36060307d587",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3fa7e38b_e6edbaf0",
        "filename": "openstack_requirements/tests/test_check.py",
        "patchSetId": 1
      },
      "lineNbr": 260,
      "author": {
        "id": 11904
      },
      "writtenOn": "2019-11-12T12:00:44Z",
      "side": 1,
      "message": "FWIW, this is the allow_3_only\u003dFalse matching case.",
      "revId": "ffc55d352a009b178f4ba4bf9c8e36060307d587",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3fa7e38b_a6b902ed",
        "filename": "openstack_requirements/tests/test_check.py",
        "patchSetId": 1
      },
      "lineNbr": 285,
      "author": {
        "id": 11904
      },
      "writtenOn": "2019-11-12T12:00:44Z",
      "side": 1,
      "message": "And this is the mismatching case. So the unit tests below illustrate the prior test does still succeed, and this unit test will also then succeed by setting the flag.",
      "revId": "ffc55d352a009b178f4ba4bf9c8e36060307d587",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3fa7e38b_6f3be5e9",
        "filename": "openstack_requirements/tests/test_check.py",
        "patchSetId": 1
      },
      "lineNbr": 334,
      "author": {
        "id": 12898
      },
      "writtenOn": "2019-11-12T01:25:53Z",
      "side": 1,
      "message": "I\u0027m not entirely convinced this test it right.\n\nCertainly I\u0027m having trouble getting it to fail locally.",
      "revId": "ffc55d352a009b178f4ba4bf9c8e36060307d587",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3fa7e38b_7241880a",
        "filename": "openstack_requirements/tests/test_check.py",
        "patchSetId": 1
      },
      "lineNbr": 334,
      "author": {
        "id": 11904
      },
      "writtenOn": "2019-11-12T02:20:10Z",
      "side": 1,
      "message": "What are you attempting to fail? This should always succeed. It\u0027s a bit redundant with the allow_3_only default, but I felt it was better to have an explicit test to validate that the behavior was no different for those that choose not to remove the py2 entries.",
      "parentUuid": "3fa7e38b_6f3be5e9",
      "revId": "ffc55d352a009b178f4ba4bf9c8e36060307d587",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3fa7e38b_12e4d40d",
        "filename": "openstack_requirements/tests/test_check.py",
        "patchSetId": 1
      },
      "lineNbr": 334,
      "author": {
        "id": 12898
      },
      "writtenOn": "2019-11-12T02:50:02Z",
      "side": 1,
      "message": "I misunderstood what it was checking.  I was expecting that if I changed ``allow_3_only\u003dTrue`` to False it\u0027d fail (and the other test does.   Then I thought it\u0027d fail if the py2 requirements were different between the project and global_reqs.  But neither of these cause failures.\n\nSo the point is to show that even on branches where py3_only is OK having py2 requirements wont cause requirements-check to fail.  Correct?",
      "parentUuid": "3fa7e38b_7241880a",
      "revId": "ffc55d352a009b178f4ba4bf9c8e36060307d587",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3fa7e38b_b2a140ab",
        "filename": "openstack_requirements/tests/test_check.py",
        "patchSetId": 1
      },
      "lineNbr": 334,
      "author": {
        "id": 11904
      },
      "writtenOn": "2019-11-12T03:01:46Z",
      "side": 1,
      "message": "Correct, this change will allow projects that wish to drop py2 to be able to only track the py3 requirements so as more and more dependencies drop py2, wish is going to start happening a lot, we won\u0027t constantly be breaking everyone\u0027s gate when we add caps that don\u0027t apply to them.",
      "parentUuid": "3fa7e38b_12e4d40d",
      "revId": "ffc55d352a009b178f4ba4bf9c8e36060307d587",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3fa7e38b_f356d72a",
        "filename": "openstack_requirements/tests/test_check.py",
        "patchSetId": 1
      },
      "lineNbr": 334,
      "author": {
        "id": 4257
      },
      "writtenOn": "2019-11-12T14:59:05Z",
      "side": 1,
      "message": "Yeah, so for context we added separate caps for Sphinx on Python 2 and Python 3, and the result was that every repo had to update doc/requirements.txt, even though almost all repos are running docs on Python 3 only, otherwise their requirements job was broken.\n\nWithout this change, we\u0027d be facing the same problem but on a massive scale as large numbers of projects switched to Python 3 only (so they don\u0027t care about Python 2 caps) while large numbers of dependencies did the same (thus requiring separate caps in global requirements to support projects like Swift that are not dropping Python 2).",
      "parentUuid": "3fa7e38b_12e4d40d",
      "revId": "ffc55d352a009b178f4ba4bf9c8e36060307d587",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3fa7e38b_30744c9c",
        "filename": "openstack_requirements/tests/test_check.py",
        "patchSetId": 1
      },
      "lineNbr": 334,
      "author": {
        "id": 8556
      },
      "writtenOn": "2019-11-13T19:11:37Z",
      "side": 1,
      "message": "yeah, doc/requirements.txt is main candidate for this due to sphinx req. Projects keeping py2 support keep having py27 requirement also which will match g-r because nobody will change those requirements for py27 in projects requirements file.",
      "parentUuid": "3fa7e38b_f356d72a",
      "revId": "ffc55d352a009b178f4ba4bf9c8e36060307d587",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3fa7e38b_62fbccbd",
        "filename": "openstack_requirements/tests/test_check.py",
        "patchSetId": 1
      },
      "lineNbr": 334,
      "author": {
        "id": 4257
      },
      "writtenOn": "2019-11-14T15:31:26Z",
      "side": 1,
      "message": "It\u0027s the projects *not* keeping py2 support that would break without this. (They\u0027d break because Oslo is also switching to python3-only, so we will need separate v2/v3 caps for Oslo - in the same way we already have for Sphinx - to enable Swift to keep using Oslo in python2.)",
      "parentUuid": "3fa7e38b_30744c9c",
      "revId": "ffc55d352a009b178f4ba4bf9c8e36060307d587",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    }
  ]
}