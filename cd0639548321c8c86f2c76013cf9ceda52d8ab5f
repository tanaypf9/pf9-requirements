{
  "comments": [
    {
      "key": {
        "uuid": "fa32b979_282ea1a5",
        "filename": "openstack_requirements/cmds/edit_constraint.py",
        "patchSetId": 1
      },
      "lineNbr": 14,
      "author": {
        "id": 2
      },
      "writtenOn": "2015-06-28T13:52:40Z",
      "side": 1,
      "message": "optparse is deprcated.",
      "revId": "cd0639548321c8c86f2c76013cf9ceda52d8ab5f",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da37b569_a1f21e05",
        "filename": "openstack_requirements/cmds/edit_constraint.py",
        "patchSetId": 1
      },
      "lineNbr": 14,
      "author": {
        "id": 4190
      },
      "writtenOn": "2015-06-28T19:03:19Z",
      "side": 1,
      "message": "Its not being developed further, but its still in all the Python versions, and this is consistent with the other commands in this tree. Happy to move them to argparse but lets not be inconsistent.",
      "parentUuid": "fa32b979_282ea1a5",
      "revId": "cd0639548321c8c86f2c76013cf9ceda52d8ab5f",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba3cc151_83f5a084",
        "filename": "openstack_requirements/cmds/edit_constraint.py",
        "patchSetId": 1
      },
      "lineNbr": 54,
      "author": {
        "id": 7069
      },
      "writtenOn": "2015-06-29T00:23:05Z",
      "side": 1,
      "message": "I don\u0027t think you want commas between args?",
      "revId": "cd0639548321c8c86f2c76013cf9ceda52d8ab5f",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba3cc151_6302dc40",
        "filename": "openstack_requirements/cmds/edit_constraint.py",
        "patchSetId": 1
      },
      "lineNbr": 54,
      "author": {
        "id": 4190
      },
      "writtenOn": "2015-06-29T00:31:54Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ba3cc151_83f5a084",
      "revId": "cd0639548321c8c86f2c76013cf9ceda52d8ab5f",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba3cc151_23f2949b",
        "filename": "openstack_requirements/cmds/edit_constraint.py",
        "patchSetId": 1
      },
      "lineNbr": 56,
      "author": {
        "id": 7069
      },
      "writtenOn": "2015-06-29T00:23:05Z",
      "side": 1,
      "message": "s/to/of\n\nconsider quoting \u0027name\u0027",
      "revId": "cd0639548321c8c86f2c76013cf9ceda52d8ab5f",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba3cc151_c3ec0892",
        "filename": "openstack_requirements/cmds/edit_constraint.py",
        "patchSetId": 1
      },
      "lineNbr": 56,
      "author": {
        "id": 4190
      },
      "writtenOn": "2015-06-29T00:31:54Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ba3cc151_23f2949b",
      "revId": "cd0639548321c8c86f2c76013cf9ceda52d8ab5f",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba3cc151_e3110cb1",
        "filename": "openstack_requirements/cmds/edit_constraint.py",
        "patchSetId": 1
      },
      "lineNbr": 65,
      "author": {
        "id": 7069
      },
      "writtenOn": "2015-06-29T00:23:05Z",
      "side": 1,
      "message": "(nit) I\u0027m not a huge fan of modifying the args like this. I\u0027d rather pull the name and replacement from the args and check if replacement doesn\u0027t exist then.",
      "revId": "cd0639548321c8c86f2c76013cf9ceda52d8ab5f",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba3cc151_a3e784ab",
        "filename": "openstack_requirements/cmds/edit_constraint.py",
        "patchSetId": 1
      },
      "lineNbr": 65,
      "author": {
        "id": 4190
      },
      "writtenOn": "2015-06-29T00:31:54Z",
      "side": 1,
      "message": "So you\u0027d rather modify args by using pop? Or testing for truthiness of a slice? Perhaps some pseudo code would help me understand what you have in mind.",
      "parentUuid": "ba3cc151_e3110cb1",
      "revId": "cd0639548321c8c86f2c76013cf9ceda52d8ab5f",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba3cc151_8374c0cf",
        "filename": "openstack_requirements/cmds/edit_constraint.py",
        "patchSetId": 1
      },
      "lineNbr": 65,
      "author": {
        "id": 7069
      },
      "writtenOn": "2015-06-29T00:38:28Z",
      "side": 1,
      "message": "It\u0027s a nit, so I don\u0027t mind if you keep it as is, but I\u0027d prefer not to modify args at all. eg:\n\n  name \u003d args[1]\n  if len(args) \u003c 3:\n      replacement \u003d \u0027\u0027\n  else:\n      replacement \u003d args[2]\n\nThen continue to use name/replacement below",
      "parentUuid": "ba3cc151_a3e784ab",
      "revId": "cd0639548321c8c86f2c76013cf9ceda52d8ab5f",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba3cc151_86cb6e72",
        "filename": "openstack_requirements/cmds/edit_constraint.py",
        "patchSetId": 1
      },
      "lineNbr": 65,
      "author": {
        "id": 4190
      },
      "writtenOn": "2015-06-29T01:13:55Z",
      "side": 1,
      "message": "So thats 4 lines of dead weight. I have a strong aversion to forcing people to read more code except when it pays for itself.\n\nWe could do\n\nout_reqs \u003d edit(reqs, args[1], args[2] if args[2:] else \u0027\u0027)\n\nbut I think thats less, not more readable. \n\nbinding args[1] and args[2] to temp variables is a bit of a wash, but we could do that. The main thing I\u0027m objecting to is the very verbose expression.\n\nI could add a comment to the current code if that would help too.",
      "parentUuid": "ba3cc151_8374c0cf",
      "revId": "cd0639548321c8c86f2c76013cf9ceda52d8ab5f",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba3cc151_69139d5d",
        "filename": "openstack_requirements/cmds/edit_constraint.py",
        "patchSetId": 1
      },
      "lineNbr": 65,
      "author": {
        "id": 7069
      },
      "writtenOn": "2015-06-29T01:52:28Z",
      "side": 1,
      "message": "Sure, as I said it\u0027s a bit of a nit. I\u0027m just not a fan of modifying things that I have presumptions about. For example, if I see a variable named \u0027args\u0027 I expect it to be the arguments, not something close to the args. It also creates difficulties if we change the params to the program. However when changing the params it should be obvious what else needs changing.\n\nA comment is a good compromise, but I\u0027m not blocking on this. The -1 is for the above notes.",
      "parentUuid": "ba3cc151_86cb6e72",
      "revId": "cd0639548321c8c86f2c76013cf9ceda52d8ab5f",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba3cc151_2377f403",
        "filename": "setup.cfg",
        "patchSetId": 1
      },
      "lineNbr": 26,
      "author": {
        "id": 7069
      },
      "writtenOn": "2015-06-29T00:23:05Z",
      "side": 1,
      "message": "(nit) should these entry points be more obvious. eg \u0027requirements-edit-constraints\u0027 or \u0027osreqs-...\u0027 etc?\n\nGranted this is consistent and it\u0027s more difficult to change the existing ones.",
      "revId": "cd0639548321c8c86f2c76013cf9ceda52d8ab5f",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba3cc151_23e5b4a7",
        "filename": "setup.cfg",
        "patchSetId": 1
      },
      "lineNbr": 26,
      "author": {
        "id": 4190
      },
      "writtenOn": "2015-06-29T00:31:54Z",
      "side": 1,
      "message": "As far as I can tell the entry point name is currently globally unique in the public sphere.",
      "parentUuid": "ba3cc151_2377f403",
      "revId": "cd0639548321c8c86f2c76013cf9ceda52d8ab5f",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba3cc151_437eb8af",
        "filename": "setup.cfg",
        "patchSetId": 1
      },
      "lineNbr": 26,
      "author": {
        "id": 7069
      },
      "writtenOn": "2015-06-29T00:38:28Z",
      "side": 1,
      "message": "sure, but that doesn\u0027t make it intuitive. But I don\u0027t think we need to fix this here as it\u0027s consistent.",
      "parentUuid": "ba3cc151_23e5b4a7",
      "revId": "cd0639548321c8c86f2c76013cf9ceda52d8ab5f",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba3cc151_c3164855",
        "filename": "setup.cfg",
        "patchSetId": 1
      },
      "lineNbr": 26,
      "author": {
        "id": 4190
      },
      "writtenOn": "2015-06-29T01:13:55Z",
      "side": 1,
      "message": "I have a pet hate for CLI commands that look like rest namespace traversal. requirements-edit-constraints is in no world obvious or intuitive. Its namespaced, but thats not at all the same thing.",
      "parentUuid": "ba3cc151_437eb8af",
      "revId": "cd0639548321c8c86f2c76013cf9ceda52d8ab5f",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba3cc151_e9256dae",
        "filename": "setup.cfg",
        "patchSetId": 1
      },
      "lineNbr": 26,
      "author": {
        "id": 7069
      },
      "writtenOn": "2015-06-29T01:52:28Z",
      "side": 1,
      "message": "sure, so perhaps we need to find something that is intuitive (but again, for another change)",
      "parentUuid": "ba3cc151_c3164855",
      "revId": "cd0639548321c8c86f2c76013cf9ceda52d8ab5f",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    }
  ]
}