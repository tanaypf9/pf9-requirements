{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "30e8ce5e_52bd0698",
        "filename": ".zuul.d/cross-jobs.yaml",
        "patchSetId": 3
      },
      "lineNbr": 16,
      "author": {
        "id": 12898
      },
      "writtenOn": "2024-01-24T05:29:30Z",
      "side": 1,
      "message": "Why not use Ubuntu-Jammy it has 3.10 and 3.11",
      "revId": "d82e1c38974c090a4c06c21eb9bd71cd6bb778cc",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "717c2a77_95e310ae",
        "filename": ".zuul.d/cross-jobs.yaml",
        "patchSetId": 3
      },
      "lineNbr": 240,
      "author": {
        "id": 15343
      },
      "writtenOn": "2024-01-24T05:21:41Z",
      "side": 1,
      "message": "Wrote up https://bugs.launchpad.net/swift/+bug/2051067 for the swift failure.\n\nWe should be able to run this job on `ubuntu-jammy`, though, if we want to move forward with py311 faster. I think it should just be a matter of also specifying `python_version: \u00273.11\u0027` here in `vars` -- at any rate, that seems to be the main difference in [swift\u0027s py311 job](https://opendev.org/openstack/swift/src/branch/master/.zuul.yaml#L140-L153).",
      "revId": "d82e1c38974c090a4c06c21eb9bd71cd6bb778cc",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fc51c86f_e9994581",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 15343
      },
      "writtenOn": "2024-01-23T22:11:38Z",
      "side": 1,
      "message": "Well *that\u0027s* interesting -- Swift doesn\u0027t currently have any jobs running on debian-bookworm; I guess there\u0027s some difference in the sqlite3 library used, and its ability to detect malformed databases?\n```\n            copy(os.path.join(os.path.dirname(__file__),\n                              \u0027malformed_example.db\u0027),\n                 os.path.join(dbpath, \u00271.db\u0027))\n            broker \u003d DatabaseBroker(os.path.join(dbpath, \u00271.db\u0027))\n            broker.db_type \u003d \u0027test\u0027\n\u003e           with self.assertRaises(sqlite3.DatabaseError) as raised, \\\n                    broker.get() as conn:\nE                   AssertionError: DatabaseError not raised\n```",
      "revId": "d82e1c38974c090a4c06c21eb9bd71cd6bb778cc",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    }
  ]
}