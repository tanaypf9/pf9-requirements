{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "d9859208_e3cd3e4d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 11604
      },
      "writtenOn": "2024-02-28T11:32:02Z",
      "side": 1,
      "message": "for the record i do not belive this is in line with the non clinet lib freeze.\nim not going to block it but this is an expction to that policy.\n\nthe non clinet lib freeze not only applies to the code of the lib but also to the requirements repo. non new non client lib release should be pulled after the non client lib freeze deadline which was last week and castellan is a non clint lib.\n\nwe shouold not need to review compatibality change to enable it in nova a this time that work should have been done before the non clinet lib freeze also.\n\ni have +2 the nova patch but please avoid bumping non clinet libs between the non client lib deadline and feature freeze.\n\nwe wount alwasy have time to review them or agree that its safe to bump them in that ime period.",
      "revId": "64dbb43112b12e75e764a3f2db5cf35123547277",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "056b231b_81a52b95",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 12898
      },
      "writtenOn": "2024-02-28T23:32:56Z",
      "side": 1,
      "message": "In general I agree with you, and thank you for reviewing the nova patch.\n\nI do disagree that the requirements repo freezes (for non-client libraries) with the non-client release freeze.\n\nHaving said that, this is indeed an exception situation and should have been treated more inline with the exception policy.  I appologise for not doing that.\n\nI also don\u0027t have all the context but based on my research it looks like:\n\na) 4.4.0 is an descendant of 4.2.0\nb) 4.3.0 was released for 2023.2/Bobcat which contains a number of reverts\n   https://review.opendev.org/c/openstack/releases/+/896237\nc) The 4.3.0 release was accepted into master/2024.1/Caracal arguably by mistake\n   https://review.opendev.org/c/openstack/requirements/+/896254\nd) there has not been a release of castellan since 4.3.0\n\nAll this means that we have been testing master with something that wasn\u0027t intended for master, the code has been merged for 6+months just it was hidden and the nova change has been around for 6+months but due to all of the above hasn\u0027t been reviewed.\n\nIn terms of possible paths forward  I can see several\n\n1) Update castellan (with an FFE) to make the consumers code and exception code backwards compatible and release that as 4.4.1 and block/ignore 4.4.0\n2) Block/ignore 4.4.0 on master, do the appropriate shenanigans to cut an early stable/2024.1 branch based on stable/2023.2/bobcat/4.3.0 and circle back to this early in 2024.2/Dalmatian probably with an early 5.0.0 castellan release\n3) Accept mistakes weer made and take steps needed to allow 4.4.0 into 2024.1/Caracal\n\nI don\u0027t have a strong opinion about the way forward, only that one should be found.    I guess option 3 is the path we\u0027re on, but I have a preference for option 1",
      "parentUuid": "d9859208_e3cd3e4d",
      "revId": "64dbb43112b12e75e764a3f2db5cf35123547277",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0cc43b62_c5f346ab",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 9816
      },
      "writtenOn": "2024-02-29T01:53:56Z",
      "side": 1,
      "message": "\u003e 1) Update castellan (with an FFE) to make the consumers code and exception code backwards compatible and release that as 4.4.1 and block/ignore 4.4.0\n\nI\u0027m ok with fixing consumer code, but I\u0027m unsure how we can address the 2nd part because\n\n- The previous exception raised by the mock class was wrong and the current one raised is the correct used in actual logic.\n- The code is from tests directory and is basically considered for internal use. I\u0027m unsure how glance decided to import test code directly from castellan instead of requesting test fixtures for external use.",
      "parentUuid": "056b231b_81a52b95",
      "revId": "64dbb43112b12e75e764a3f2db5cf35123547277",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "187233c9_f221d081",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 11604
      },
      "writtenOn": "2024-02-29T11:33:27Z",
      "side": 1,
      "message": "... gerrit lost this so lets try again\n\nwe could tag 4.4.0 as 5.0.0 just to capture the api break but honestly since the relase has already happend i dont think we need to correct the api with a 4.4.1 in a rush.\n\nit looks like only galnce an nova was affected ans you could argue that we should not inhiert form teh base class although it is a public api.\n\nthe takeway here for me is when we are revieing release changes we shoudl consider if a ABC has addded new functions that dont have a default impl and treat that as if they added/removed new required fucntion parmaters or removed a function.\n\ni.e. treat it as an api breakage and therefor a major version bump because it requires exisitng users to change there code to maintian the existing fuctionaltiy.",
      "parentUuid": "0cc43b62_c5f346ab",
      "revId": "64dbb43112b12e75e764a3f2db5cf35123547277",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "07d02d51_38bee6c9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 9816
      },
      "writtenOn": "2024-02-29T11:37:23Z",
      "side": 1,
      "message": "\u003e it looks like only galnce an nova was affected ans you could argue that we should not inhiert form teh base class although it is a public api.\n\nI didn\u0027t explain the details well so there may be some misunderstanding about what I said.\nI totally agree with the change made in KeyManager class and this is really API breaking change which should be avoided or at least announced as a major bump.\n\nHowever the failure in glance is caused by a different change https://review.opendev.org/c/openstack/castellan/+/909051 and this is just touching the unit tests. The unit test failure in glance is caused by the fact they implement their unit tests usng something from castellan.tests which I\u0027m saying not intended.",
      "parentUuid": "187233c9_f221d081",
      "revId": "64dbb43112b12e75e764a3f2db5cf35123547277",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    }
  ]
}