{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "ce46355a_12dba870",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 13252
      },
      "writtenOn": "2024-04-23T17:47:14Z",
      "side": 1,
      "message": "Ok, I\u0027m not completely convinced yet, but also not strictly against. Let\u0027s see what other reviewers think.",
      "revId": "314734e938f107cbd5ebcc7af4d9167c11347406",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "eb0d3d11_049357eb",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 12898
      },
      "writtenOn": "2024-04-29T21:09:45Z",
      "side": 1,
      "message": "While improvements are certainly possible this looks good to me.  \n\nRunning this at the beginning of a cycle is probably a good idea(tm).  From now on including the output of the run is probably helpful. \n\nThanks.",
      "revId": "314734e938f107cbd5ebcc7af4d9167c11347406",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fc3265d6_6efbaa92",
        "filename": "tools/lint.py",
        "patchSetId": 4
      },
      "lineNbr": 142,
      "author": {
        "id": 13252
      },
      "writtenOn": "2024-04-18T05:38:08Z",
      "side": 1,
      "message": "nit: released",
      "range": {
        "startLine": 142,
        "startChar": 63,
        "endLine": 142,
        "endChar": 70
      },
      "revId": "314734e938f107cbd5ebcc7af4d9167c11347406",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4db5c5b7_aa73d8d5",
        "filename": "tools/lint.py",
        "patchSetId": 4
      },
      "lineNbr": 144,
      "author": {
        "id": 13252
      },
      "writtenOn": "2024-04-18T05:38:08Z",
      "side": 1,
      "message": "This comment is misleading, since it uses v1.45 as example, which suggests a large number of releases in between. What really matters is the first release after the exclude, likely v1.23 in this case. And what worries me is what happens if v1.22 is old, but v1.23 was only released recently, like a week ago. IMO we wouldn\u0027t want to drop the exlude right away then. But I agree that checking the age of v1.23 would be much more complicated, maybe too complicated for this use case. One could also argue that a project that needs 2 years to produce a fixed release could be considered unmaintained and should maybe not be getting used at all, but again I\u0027m not sure how to detect this in an automated fashion.",
      "revId": "314734e938f107cbd5ebcc7af4d9167c11347406",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5e46768c_19b7fb35",
        "filename": "tools/lint.py",
        "patchSetId": 4
      },
      "lineNbr": 144,
      "author": {
        "id": 15334
      },
      "writtenOn": "2024-04-23T10:38:40Z",
      "side": 1,
      "message": "We _could_ do this, but given it\u0027s a manually run tool it\u0027s possible to verify these changes. I just did this and didn\u0027t spot anything that filled the rather specific criteria of \"the most recent release was released very recently and the second (and potentially third, and foruth, and fifth, ...) most recent release(s) were blacklisted and released over 2 years ago). IMO what\u0027s done here is good enough.",
      "parentUuid": "4db5c5b7_aa73d8d5",
      "revId": "314734e938f107cbd5ebcc7af4d9167c11347406",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "Code reviewed by core reviewer"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "314734e938f107cbd5ebcc7af4d9167c11347406",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "Verified in gate by CI"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Verified\u003dMAX AND -label:Verified\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Verified=MAX AND -label:Verified=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Verified=MAX"],"failingAtoms":["label:Verified=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "314734e938f107cbd5ebcc7af4d9167c11347406",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Workflow",
        "description": {
          "value": "Approved for gate by core reviewer"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Workflow\u003dMAX AND -label:Workflow\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Workflow=MAX AND -label:Workflow=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Workflow=MAX"],"failingAtoms":["label:Workflow=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "314734e938f107cbd5ebcc7af4d9167c11347406",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}