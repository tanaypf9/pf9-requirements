{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "5a48bf22_bd18b15a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 12898
      },
      "writtenOn": "2024-01-22T02:53:33Z",
      "side": 1,
      "message": "I\u0027m \"on the fence\" as the preferred format for constraints. Having said that I\u0027m not a firm +0 on the idea.  I won\u0027t block something like this merging, I\u0027ll review etc but I\u0027m not an advocate.  As I\u0027ve stated before I prefer the simple verbose for as it stands at the moment.\n\nWith all that said I think we need to cover more tests / scenarios.\n\n---\nalabaster\u003d\u003d\u003d0.7.13;python_version\u003d\u003d\u00273.8\u0027\nalabaster\u003d\u003d\u003d0.7.16;python_version\u003e\u003d\u00273.9\u0027\n---\n\n---\nasync-timeout\u003d\u003d\u003d4.0.3;python_version\u003d\u003d\u00273.10\u0027\nasync-timeout\u003d\u003d\u003d4.0.3;python_version\u003d\u003d\u00273.8\u0027\nasync-timeout\u003d\u003d\u003d4.0.3;python_version\u003d\u003d\u00273.9\u0027\n# NOT needed on pythons after 3.10\n---\n\n---\nimportlib-metadata\u003d\u003d\u003d6.2.1;python_version\u003d\u003d\u00273.8\u0027\nimportlib-metadata\u003d\u003d\u003d6.2.1;python_version\u003d\u003d\u00273.9\u0027\nimportlib-metadata\u003d\u003d\u003d6.11.0;python_version\u003e\u003d\u00273.10\u0027\n---\n\nI feel like there have been times when we\u0027ve needed \n\n--\nlibrary\u003d\u003d\u003dversion_1;python_version\u003c\u003d3.10\nlibrary\u003d\u003d\u003dversion_2;python_version\u003e\u003d3.11\n---\n\nbut I can\u0027t find that now.\n\nAlso longer term we\u0027ll need to think about what the constraints file and generation looks like for SLURP upgrades.  For example if we \"skip\" python versions, generate constraints for 3.8, 3.10, 3.11, 3.12[1], how would we want that specified.\n\nI don\u0027t have answers to any of those questions :/\n\n[1] Totally making up the python versions",
      "revId": "85f8ef327a603ac51eeb0a1edfe9e23df326ca9d",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "21784be6_f36bd385",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 13252
      },
      "writtenOn": "2024-01-22T12:50:41Z",
      "side": 1,
      "message": "So how about we drop the \"\u003c\u003d\" part and use explicit \"\u003d\u003d\" matches for all python versions except the highest one that we\u0027re generating constraints for and just have \"\u003e\u003d\" for these. That should be able to cover all your examples, but still has the upside that constraints will also be applied to newer python versions, which I think will help both forward testing with new versions not covered by the PTI yes, as well as scenarios where stable branch deployments might want to use newer python.",
      "parentUuid": "5a48bf22_bd18b15a",
      "revId": "85f8ef327a603ac51eeb0a1edfe9e23df326ca9d",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7d78f0ae_6b9602f2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 12898
      },
      "writtenOn": "2024-01-24T02:10:46Z",
      "side": 1,
      "message": "Can we re-order this series?\n\nI feel like removing update-requirements and six are fine to land now, the other 2 (including this one) need consensus.",
      "revId": "85f8ef327a603ac51eeb0a1edfe9e23df326ca9d",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7b1b238b_cc1e2413",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 12898
      },
      "writtenOn": "2024-01-24T02:12:13Z",
      "side": 1,
      "message": "Yup that\u0027d work for me.",
      "parentUuid": "21784be6_f36bd385",
      "revId": "85f8ef327a603ac51eeb0a1edfe9e23df326ca9d",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "038e996b_76683e79",
        "filename": "openstack_requirements/tests/test_generate.py",
        "patchSetId": 1
      },
      "lineNbr": 93,
      "author": {
        "id": 13252
      },
      "writtenOn": "2023-12-21T16:29:33Z",
      "side": 1,
      "message": "This has some gap in between, so if we would have results for 3.8 and 3.10, there would be no pin at all for 3.9?\n\nI think this needs more test cases to verify the expected behavior, like with three python_versions where either pairs of freezes are equal or there are three different ones (all of these do actually occur for current u-c)",
      "revId": "85f8ef327a603ac51eeb0a1edfe9e23df326ca9d",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "13bcf3a2_3624c49b",
        "filename": "openstack_requirements/tests/test_generate.py",
        "patchSetId": 1
      },
      "lineNbr": 93,
      "author": {
        "id": 14288
      },
      "writtenOn": "2024-01-01T19:19:37Z",
      "side": 1,
      "message": "Do we want this to be a new test instead of a changed test?",
      "revId": "85f8ef327a603ac51eeb0a1edfe9e23df326ca9d",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "230c876c_df3f3845",
        "filename": "openstack_requirements/tests/test_generate.py",
        "patchSetId": 1
      },
      "lineNbr": 93,
      "author": {
        "id": 13252
      },
      "writtenOn": "2024-01-22T12:50:41Z",
      "side": 1,
      "message": "Well no, IIUC this test needs changing because the tested behaviour has changed. I just think additional testing is needed to cover more cases.",
      "parentUuid": "13bcf3a2_3624c49b",
      "revId": "85f8ef327a603ac51eeb0a1edfe9e23df326ca9d",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4922fb45_8c87bb38",
        "filename": "openstack_requirements/tests/test_generate.py",
        "patchSetId": 1
      },
      "lineNbr": 93,
      "author": {
        "id": 12898
      },
      "writtenOn": "2024-01-24T02:12:13Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "230c876c_df3f3845",
      "revId": "85f8ef327a603ac51eeb0a1edfe9e23df326ca9d",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    }
  ]
}