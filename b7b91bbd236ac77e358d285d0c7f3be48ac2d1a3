{
  "comments": [
    {
      "key": {
        "uuid": "5a8bc5a2_ddb730f3",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 29,
      "author": {
        "id": 6854
      },
      "writtenOn": "2016-09-26T09:45:41Z",
      "side": 1,
      "message": "FYI, you can parse on-wire messages with ryu:\n\n  from ryu.ofproto import ofproto_parser\n  from ryu.ofproto import ofproto_protocol\n\n  (version, msg_type, msg_len, xid) \u003d ofproto_parser.header(wire_msg)\n  dp \u003d ofproto_protocol.ProtocolDesc(version\u003dversion)\n  msg \u003d ofproto_parser.msg(dp, version, msg_type, msg_len, xid, wire_msg)\n  print msg\n  print msg.to_jsondict()",
      "revId": "b7b91bbd236ac77e358d285d0c7f3be48ac2d1a3",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a8bc5a2_66404035",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 29,
      "author": {
        "id": 11159
      },
      "writtenOn": "2016-09-26T12:45:16Z",
      "side": 1,
      "message": "Thanks, YAMAMOTO.\n\nI just tried ryu, it can parse some msg, but for some reason I don\u0027t know, it can\u0027t parse others.\n\nFor example:\nwire_msg \u003d \u0027\\x04\\x0e\\x00h\\xce\\x14\\x04v\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00M\\x00\\x00\\x00\\x00\\x00\\xff\\xfe\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x16\\x00\\x01\\xd3\\x08\\x00\\x00\\x00%\\x00\\x00\\x005\u0027\n\nUsing ryu will report \n2016-09-26 07:39:11.630 TRACE ryu.ofproto.ofproto_parser   File \"/usr/local/lib/python2.7/dist-packages/ryu/ofproto/ofproto_v1_3_parser.py\", line 1678, in parser\n2016-09-26 07:39:11.630 TRACE ryu.ofproto.ofproto_parser     (header,) \u003d struct.unpack_from(\u0027!I\u0027, buf, offset)\n2016-09-26 07:39:11.630 TRACE ryu.ofproto.ofproto_parser error: unpack_from requires a buffer of at least 4 bytes\n\nBut using ofpstr, it outputs\nofp4.mod2str(wire_msg)\n\u0027table\u003d77,priority\u003d65534,out_port\u003dany,out_group\u003dany,nxm_ct_state\u003d0x25/0x35\u0027\n\nI would like to use ryu is it works all the time. For now, I will update the commit message at first.",
      "parentUuid": "5a8bc5a2_ddb730f3",
      "revId": "b7b91bbd236ac77e358d285d0c7f3be48ac2d1a3",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a8bc5a2_73345bfb",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 29,
      "author": {
        "id": 6854
      },
      "writtenOn": "2016-09-27T01:07:58Z",
      "side": 1,
      "message": "parser of some of controller-to-switch messages are not implemented in ryu, as it mainly aims for the controller side implementation. (vs switch side)\nso you\u0027re right, it doesn\u0027t suite for your purpose. (pretty print \"data\" in error message)",
      "parentUuid": "5a8bc5a2_66404035",
      "revId": "b7b91bbd236ac77e358d285d0c7f3be48ac2d1a3",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a8bc5a2_3331f25a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 29,
      "author": {
        "id": 9200
      },
      "writtenOn": "2016-09-27T01:29:57Z",
      "side": 1,
      "message": "Hi, such a feature can be implemented in ryu.\n\nI guess you need this for bug/1624826, right?",
      "parentUuid": "5a8bc5a2_73345bfb",
      "revId": "b7b91bbd236ac77e358d285d0c7f3be48ac2d1a3",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    }
  ]
}