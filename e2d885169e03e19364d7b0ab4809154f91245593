{
  "comments": [
    {
      "key": {
        "uuid": "3fa7e38b_e20fbcdd",
        "filename": "openstack_requirements/tests/test_check.py",
        "patchSetId": 2
      },
      "lineNbr": 364,
      "author": {
        "id": 4257
      },
      "writtenOn": "2019-11-14T15:31:26Z",
      "side": 1,
      "message": "Actually, I just realised this isn\u0027t sufficient. If python3-only projects have to update their requirements.txt from:\n\n  name\u003e\u003d1.5\n\nto\n\n  name\u003e\u003d1.5;python_version\u003e\u003d\u00273.5\u0027\n\nthen that\u0027s still a change that will require ~every project to update their requirements.txt to avoid breakage. What we really want is for it to still work when this line is just:\n\n  name\u003e\u003d1.5",
      "revId": "e2d885169e03e19364d7b0ab4809154f91245593",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3fa7e38b_c2b3a009",
        "filename": "openstack_requirements/tests/test_check.py",
        "patchSetId": 2
      },
      "lineNbr": 364,
      "author": {
        "id": 11904
      },
      "writtenOn": "2019-11-14T15:34:41Z",
      "side": 1,
      "message": "That last case will still work. If there is no specific python_version, then the requirement will be checked and it will expect it to be present in both local requirements and global-requirements. The evaluation only happens when a python_version is provided, then there is a check that the given version matches the provided runtime version.\n\nWe could actually raise that provided runtime version to 3.6, but I didn\u0027t think we wanted to go that far.",
      "parentUuid": "3fa7e38b_e20fbcdd",
      "revId": "e2d885169e03e19364d7b0ab4809154f91245593",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3fa7e38b_5402fc3f",
        "filename": "openstack_requirements/tests/test_check.py",
        "patchSetId": 2
      },
      "lineNbr": 364,
      "author": {
        "id": 4257
      },
      "writtenOn": "2019-11-15T14:56:00Z",
      "side": 1,
      "message": "Oh, good :)\n\nIt would be nice if we had a test to check that.",
      "parentUuid": "3fa7e38b_c2b3a009",
      "revId": "e2d885169e03e19364d7b0ab4809154f91245593",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3fa7e38b_37142241",
        "filename": "openstack_requirements/tests/test_check.py",
        "patchSetId": 2
      },
      "lineNbr": 364,
      "author": {
        "id": 11904
      },
      "writtenOn": "2019-11-15T15:07:56Z",
      "side": 1,
      "message": "Yeah, probably good to have that test coverage. Updated.",
      "parentUuid": "3fa7e38b_5402fc3f",
      "revId": "e2d885169e03e19364d7b0ab4809154f91245593",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3fa7e38b_2285d459",
        "filename": "playbooks/files/project-requirements-change.py",
        "patchSetId": 2
      },
      "lineNbr": 33,
      "author": {
        "id": 4257
      },
      "writtenOn": "2019-11-14T15:21:43Z",
      "side": 1,
      "message": "AFAIK there are no open stable branches before Ocata. Should we future-proof this more by doing [u-za-n]? (IOW how confident are we that python 2 dependencies will be removed from g-r by Z.)",
      "revId": "e2d885169e03e19364d7b0ab4809154f91245593",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3fa7e38b_e2281c34",
        "filename": "playbooks/files/project-requirements-change.py",
        "patchSetId": 2
      },
      "lineNbr": 33,
      "author": {
        "id": 11904
      },
      "writtenOn": "2019-11-14T15:31:46Z",
      "side": 1,
      "message": "We could, and I had actually thought about doing something more inclusive like that. But I thought it might be better to wait until we have naming sorted out first (though I don\u0027t expect it to change *that* much).\n\nBut I was also thinking about the fact that we won\u0027t get too far into wrapping the alphabet before all of this py2/py3 handling is no longer an issue because most of the py2 support will age out by then.\n\nAll that said, easy enough to update that regex as a follow up if we decide we want to handle more than these last few releases.",
      "parentUuid": "3fa7e38b_2285d459",
      "revId": "e2d885169e03e19364d7b0ab4809154f91245593",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3fa7e38b_60d7f923",
        "filename": "playbooks/files/project-requirements-change.py",
        "patchSetId": 2
      },
      "lineNbr": 33,
      "author": {
        "id": 12898
      },
      "writtenOn": "2019-11-20T22:58:35Z",
      "side": 1,
      "message": "That isn\u0027t quite right.  Older stable branches are *open* they\u0027re just not maintained.\n\nI\u0027d rather leave this as is and worry about what happens after Z ... after Z I mean we *could* move away from alphabetical series names at that point",
      "parentUuid": "3fa7e38b_2285d459",
      "revId": "e2d885169e03e19364d7b0ab4809154f91245593",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543",
      "unresolved": false
    }
  ]
}